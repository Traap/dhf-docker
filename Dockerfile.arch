# {{{ üêß Dockerfile.arch ‚Äî DHF Builder (Arch Linux)
#
# Multi-stage build for Design History File (DHF) LaTeX pipeline:
#   1. texlive     ‚Üí Base LaTeX environment
#   2. ruby        ‚Üí Ruby + Git + Bundler
#   3. soup_repos  ‚Üí Cloned repositories
#   4. rubydeps    ‚Üí Gem installs
#   5. pandoc      ‚Üí Heavy Haskell-based toolchain
#   6. deploy      ‚Üí Installs tlc-article into TeX tree
#   7. runtime     ‚Üí Final DHF builder image
#
# -------------------------------------------------------------------------- }}}
# {{{ üß± Stage 1: TeX Live base

FROM archlinux:latest AS texlive
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
  pacman -Sy --noconfirm pacman-contrib reflector curl && \
  pacman-key --init && pacman-key --populate archlinux && \
  reflector -c "United States" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist && \
  echo "ParallelDownloads = 2" >> /etc/pacman.conf && \
  pacman -Syu --noconfirm --needed \
  texlive-bin \
  texlive-binextra \
  texlive-core \
  texlive-latexextra \
  texlive-pictures \
  texlive-publishers \
  texlive-plaingeneric \
  texlive-science \
  texlive-fontsextra && \
  pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üíé Stage 2: Ruby + Git + Bundler

FROM archlinux:latest AS ruby
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
  pacman -Sy --noconfirm \
  git \
  ruby && \
  gem update --system 3.7.2 && \
  gem install bundler rake && \
  pacman -Scc --noconfirm && \
  rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üç≤ Stage 3: Clone repositories

FROM ruby AS soup_repos
WORKDIR /soup
RUN git clone --depth=1 https://github.com/Traap/docbld.git && \
    git clone --depth=1 https://github.com/Traap/newdoc.git && \
    git clone --depth=1 https://github.com/Traap/amber.git && \
    git clone --depth=1 https://github.com/Traap/autodoc.git && \
    git clone --depth=1 https://github.com/Traap/tlc-article.git

# -------------------------------------------------------------------------- }}}
# {{{ üì¶ Stage 4: Bundle install (Ruby deps)

FROM ruby AS rubydeps
COPY --from=soup_repos /soup /soup
WORKDIR /soup

RUN pacman -Syu --noconfirm --needed base-devel clang cmake && \
    GEM_PATH="$(ruby -e 'puts File.join("/root/.local/share/gem/ruby", RUBY_VERSION[/^\d+\.\d+/])')" && \
    export GEM_HOME="$GEM_PATH" && export PATH="$GEM_HOME/bin:$PATH" && \
    for dir in docbld amber; do \
      if [ -f "$dir/Gemfile" ]; then \
        (cd "$dir" && bundle config set --local path "$GEM_PATH" && bundle install); \
      fi; \
    done && \
    pacman -Rns --noconfirm base-devel clang cmake && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üìö Stage 5: Prebuild Pandoc (heavy Haskell dependencies)

FROM archlinux:latest AS pandoc
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
    pacman -Sy --noconfirm reflector curl pacman-contrib && \
    pacman-key --init && pacman-key --populate archlinux && \
    reflector -c "United States" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist && \
    echo "ParallelDownloads = 2" >> /etc/pacman.conf && \
    for i in 1 2 3; do \
      pacman -Syu --noconfirm --needed pandoc && break || \
      (echo "‚ö†Ô∏è  Pandoc build failed (attempt $$i) ‚Äî retrying in 20s..." && sleep 20); \
    done && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üß© Stage 6: Deploy tlc-article into TeX tree

FROM texlive AS deploy
COPY --from=soup_repos /soup/tlc-article /soup/tlc-article

RUN TEXMFLOCAL=/usr/share/texmf-local && \
    mkdir -vp "$TEXMFLOCAL/tex/latex/tlc-article" && \
    cp -v /soup/tlc-article/tlc-article.cls "$TEXMFLOCAL/tex/latex/tlc-article/" && \
    mktexlsr "$TEXMFLOCAL"

# -------------------------------------------------------------------------- }}}
# {{{ üöÄ Stage 7: Final Runtime (all combined)


FROM texlive AS runtime
COPY --from=deploy /usr/share/texmf-local /usr/share/texmf-local
COPY --from=pandoc /usr/bin/pandoc /usr/bin/pandoc
COPY --from=pandoc /usr/lib /usr/lib
COPY --from=rubydeps /soup /soup

RUN cat <<'EOF' > /etc/profile.d/dhf-env.sh
# DHF Builder Environment Variables (shared by LaTeX, Rake, and shell)
export SOUPHOME=/soup
export AMBERPATH=/soup/amber
export AUTODOCPATH=/soup/autodoc
export DOCBLDPATH=/soup/docbld
export NEWDOCPATH=/soup/newdoc
export TLC_ARTICLEPATH=/soup/tlc-article
export EXPORTDIR=/exports
alias ll='ls -la'
EOF

RUN chmod +x /etc/profile.d/dhf-env.sh

RUN pacman -Sy --noconfirm reflector && \
    pacman-key --init && pacman-key --populate archlinux && \
    reflector -c "United States" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist && \
    echo "ParallelDownloads = 2" >> /etc/pacman.conf && \
    for i in 1 2 3; do \
      pacman -Syu --noconfirm --needed --overwrite '*' make python ruby neovim which && break || \
      (echo "‚ö†Ô∏è  Pacman failed (attempt $$i) ‚Äî retrying in 20s..." && sleep 20); \
    done && \
    gem update --system 3.7.2 && gem install bundler rake && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/* && \
    mktexlsr && locale-gen

ENV PATH="/root/.local/share/gem/ruby/3.4.0/bin:${PATH}" \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

WORKDIR /workspace
RUN mkdir -p /exports
VOLUME ["/workspace", "/exports"]

ENTRYPOINT ["/bin/bash", "-lc"]
CMD ["make", "all"]

# -------------------------------------------------------------------------- }}}
