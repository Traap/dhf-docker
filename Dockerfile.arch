# {{{ üêß Dockerfile.arch ‚Äî DHF Builder (Arch Linux)
#
# Multi-stage build for Design History File (DHF) LaTeX pipeline:
#   1. texlive    ‚Üí Base LaTeX environment
#   2. ruby       ‚Üí Ruby + Git + Bundler
#   3. soup_repos ‚Üí Cloned repositories
#   4. rubydeps   ‚Üí Gem installs
#   5. deploy     ‚Üí Installs tlc-article into TeX tree
#   6. runtime    ‚Üí Final DHF builder image
#
# -------------------------------------------------------------------------- }}}
# {{{ üß± Stage 1: TeX Live base

FROM archlinux:latest AS texlive
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
    pacman -Sy --noconfirm pacman-contrib curl && \
    curl -s "https://archlinux.org/mirrorlist/?country=US&protocol=https&ip_version=4" \
      | sed -e 's/^#Server/Server/' -e '/^#/d' > /etc/pacman.d/mirrorlist && \
    rankmirrors -n 10 /etc/pacman.d/mirrorlist > /etc/pacman.d/mirrorlist.new && \
    mv /etc/pacman.d/mirrorlist.new /etc/pacman.d/mirrorlist && \
    pacman -Syu --noconfirm --needed \
      texlive-bin texlive-binextra texlive-core \
      texlive-latexextra texlive-pictures texlive-publishers \
      texlive-plaingeneric texlive-science && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üíé Stage 2: Ruby + Git + Bundler

FROM archlinux:latest AS ruby
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen && \
    pacman -Syu --noconfirm git ruby && \
    gem update --system 3.7.2 && gem install bundler rake && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

ENV GEM_HOME="/root/.local/share/gem/ruby/$(ruby -e 'puts RUBY_VERSION[/^\d+\.\d+/]')" \
    PATH="$GEM_HOME/bin:$PATH"

# -------------------------------------------------------------------------- }}}
# {{{ üç≤ Stage 3: Clone repositories

FROM ruby AS soup_repos
WORKDIR /soup
RUN git clone --depth=1 https://github.com/Traap/docbld.git && \
    git clone --depth=1 https://github.com/Traap/newdoc.git && \
    git clone --depth=1 https://github.com/Traap/amber.git && \
    git clone --depth=1 https://github.com/Traap/autodoc.git && \
    git clone --depth=1 https://github.com/Traap/tlc-article.git

# -------------------------------------------------------------------------- }}}
# {{{ üì¶ Stage 4: Bundle install (Ruby deps)

FROM ruby AS rubydeps
COPY --from=soup_repos /soup /soup
WORKDIR /soup

# Install temporary development tools required for building native gems
RUN pacman -Syu --noconfirm --needed base-devel && \
    for dir in docbld amber; do \
      if [ -f "$dir/Gemfile" ]; then \
        (cd "$dir" && bundle install); \
      fi; \
    done && \
    # Clean up development packages and caches to minimize final size
    pacman -Rns --noconfirm base-devel && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/*

# -------------------------------------------------------------------------- }}}
# {{{ üß© Stage 5: Deploy tlc-article into TeX tree

FROM texlive AS deploy
COPY --from=soup_repos /soup/tlc-article /soup/tlc-article

RUN TEXMFLOCAL=/usr/share/texmf-local && \
    mkdir -vp "$TEXMFLOCAL/tex/latex/tlc-article" && \
    cp -v /soup/tlc-article/tlc-article.cls "$TEXMFLOCAL/tex/latex/tlc-article/" && \
    mktexlsr "$TEXMFLOCAL"

# -------------------------------------------------------------------------- }}}
# {{{ üöÄ Stage 6: Final Runtime

FROM texlive AS runtime
COPY --from=deploy /usr/share/texmf-local /usr/share/texmf-local
COPY --from=rubydeps /soup /soup

RUN pacman -Sy --noconfirm make pandoc python ruby neovim which && \
    gem update --system 3.7.2 && gem install bundler rake && \
    pacman -Scc --noconfirm && rm -rf /var/cache/pacman/pkg/* && \
    mktexlsr && locale-gen

ENV PATH="/root/.local/share/gem/ruby/3.4.0/bin:$PATH"

WORKDIR /workspace
RUN mkdir -p /exports
VOLUME ["/workspace", "/exports"]

CMD ["make", "all"]

# -------------------------------------------------------------------------- }}}
